# Files in the locale directory are used for localization.
# If you want to use locales other than English, follow the instructions in legesher-translations guide.
# https://legesher.readme.io/docs/translation-guide
#
# THANK YOU FOR MAKING LEGESHER LARGER THAN US.

# NOTE: "language-abbreviation"
language-abbreviation: "he"

# ----------------------
# |    SYSTEM: ATOM    |
# ----------------------
# << Keywords >>
# NOTE: All keywords are capitalized for Atom because it is used for
# key information found in comments within the editor
  NOTE: "הערה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  INFO: "מידע"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  IDEA: "רעיון"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  DEBUG: "מציאת_באגים"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  REMOVE: "הסר"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  OPTIMIZE: ""
    # ❓ @Adarwall
    # ❓ @Gal-Gilor "ייעול"
  REVIEW: ""
    # ❓ @Adarwall
    # ❓ @Gal-Gilor "סקירה"
  HACK: "האק"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor "פריצה או פרץ?"
  UNDONE: "שחזר"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  TODO: ""
    # ❓ @Adarwall
    # ❓ @Gal-Gilor "לעשות"
  REFACTOR: "לעשות_מחדש"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor "לשפר"
  DEPRECATED: "הוצא_משימוש"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  TASK: "מטלה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  CHGME: ""
    # ❓ @Adarwall
    # 🤔 @Gal-Gilor "Requires elaboration on what this word does"
  NOTREACHED: ""
    # ❓ @Adarwall
    # 🤔 @Gal-Gilor "Requires elaboration on what this word does"
  WTF: "וואט_דה_פאק"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  BUG: "באג"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  ERROR: "שגיאה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  OMG: "או_מיי_גאד"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor "אלוהים_אדירים"
  ERR: "שגיאה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  OMFGRLY: ""
    # ❓ @Adarwall
    # 🤔 @Gal-Gilor "OMG REALLY isn't used much. Same as OMG (אלוהים_אדירים)"
  WARNING: "אזהרה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
  WARN: "אזהרה"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor "להזהיר"
  BROKEN: "שבור"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor

# ----------------------
# |   LANGUAGE: AGDA   |
# ----------------------
# NOTE: https://agda.readthedocs.io/en/v2.5.4.2/index.html
# << Keywords >>
  abstract: ""
  codata: ""
  coinductive: ""
  constructor: ""
  data: ""
  do: ""
  eta-equality: ""
  field: ""
  forall: ""
  hiding: ""
  import: "ייבא"
    # ✅ @Adarwall
  in: ""
  inductive: ""
  infix: ""
  infixl: ""
  infixr: ""
  instance: ""
  let: ""
  macro: ""
  module: ""
  mutual: ""
  no-eta-equality: ""
  open: ""
  overlap: ""
  pattern: ""
  postulate: ""
  primitive: ""
  private: "פרטי"
    # ✅ @Adarwall
  public: "ציבורי"
    # ✅ @Adarwall
  quote: ""
  quoteContext: ""
  quoteGoal: ""
  quoteTerm: ""
  record: ""
  renaming: ""
  rewrite: ""
  Set: "" # can appear with a number suffix, optionally suffixed, make sure we account for this
  syntax: ""
  tactic: ""
  unquote: ""
  unquoteDecl: ""
  unquoteDef: ""
  using: ""
  where: ""
  with: ""

# << Error Messages >>

# ----------------------
# |   LANGUAGE: AFL    |
# ----------------------
# Amibroker Formula Language
# NOTE: https://www.amibroker.com/guide/a_language.html

# << Keywords >>
do: "" # (part of do-while statement)
while: "כל_עוד"
  # ✅ @Adarwall
for: "לכל"
  # ✅ @Adarwall
if: "אם" # (part of if-else statement)
  # ✅ @Adarwall
else: "אחרת" # (part of if-else statement)
  # ✅ @Adarwall
switch: ""
break: "" # (part of the switch statement or for/while statements)
case: "" # (part of the switch statement)
continue: "" # (part of for/while statements)
default: "" # (part of switch statement)
function: ""
procedure: ""
return: "החזר"
  # ✅ @Adarwall
local: ""
global: ""
static: ""
typeof: ""
NOT: ""
AND: ""
OR: ""
Null: "כלום"
  # ✅ @Adarwall
# << Error Messages >>

# ----------------------
# |   LANGUAGE: BASH   |
# ----------------------
# << Keywords >>
case: ""
do: ""
done: ""
elif: "אחרת_אז"
  # ✅ @Adarwall
else: "אחרת"
  # ✅ @Adarwall
esac: ""
fi: ""
for: "לכל"
  # ✅ @Adarwall
function: ""
if: "אם"
  # ✅ @Adarwall
in: ""
select: ""
then: ""
time: ""
until: ""
while: "כל_עוד"
  # ✅ @Adarwall

# << Error Messages >>

# ----------------------
# |   LANGUAGE: C      |
# ----------------------
# << Keywords >>
auto: ""
double: "ממשי"
  # ✅ @Adarwall
int: "שלם"
  # ✅ @Adarwall
struct: ""
break: ""
else: "אחרת"
  # ✅ @Adarwall
long: ""
switch: ""
case: ""
enum: ""
register: ""
typedef: ""
char: ""
extern: ""
return: "החזר"
  # ✅ @Adarwall
union: ""
const: ""
float: ""
short: ""
unsigned: ""
continue: ""
for: "לכל"
  # ✅ @Adarwall
signed: ""
void: "ריק"
  # ✅ @Adarwall
default: ""
goto: ""
sizeof: ""
volatile: ""
do: ""
if: "אם"
  # ✅ @Adarwall
static: ""
while: "כל_עוד"
  # ✅ @Adarwall

# << Error Messages >>

# ----------------------
# |   LANGUAGE:  C++   |
# ----------------------
# << Keywords >>

#define: ""
#defined: ""
#elif: ""
#else: "אחרת"
  # ✅ @Adarwall
#endif: ""
#error: ""
#if: "אם"
  # ✅ @Adarwall
#ifdef: ""
#ifndef: ""
#include: ""
#line: ""
#pragma: ""
#undef: ""
alignas: ""
alignof: ""
and: ""
and_eq: ""
asm: ""
atomic_cancel: ""
atomic_commit: ""
atomic_noexcept: ""
auto: ""
bitand: ""
bitor: ""
bool: ""
break: ""
case: ""
catch: ""
char: "תו"
  # ✅ @Adarwall
char16_t: ""
char32_t: ""
class: "מחלקה"
  # ✅ @Adarwall
compl: ""
concept: ""
const: ""
constexpr: ""
const_cast: ""
continue: ""
decltype: ""
default: ""
delete: ""
do: ""
double: ""
dynamic_cast: ""
else: "אחרת"
  # ✅ @Adarwall
enum: ""
explicit: ""
export: ""
extern: ""
false: "שקר"
  # ✅ @Adarwall
final: ""
float: ""
for: "לכל"
  # ✅ @Adarwall
friend: ""
goto: ""
if: "אם"
  # ✅ @Adarwall
inline: ""
int: "שלם"
  # ✅ @Adarwall
import: "ייבא"
  # ✅ @Adarwall
long: ""
module: ""
mutable: ""
namespace: ""
new: "חדש"
  # ✅ @Adarwall
noexcept: ""
not: ""
not_eq: ""
nullptr: ""
operator: ""
or: ""
or_eq: ""
override: ""
private: "פרטי"
  # ✅ @Adarwall
protected: ""
public: "ציבורי"
  # ✅ @Adarwall
register: ""
reinterpret_cast: ""
requires: ""
return: "החזר"
  # ✅ @Adarwall
short: ""
signed: ""
sizeof: ""
static: ""
static_assert: ""
static_cast: ""
struct: ""
switch: ""
synchronized: ""
template: ""
this: "זה"
  # ✅ @Adarwall
thread_local: ""
throw: ""
transaction_safe: ""
transaction_safe_dynamic: ""
true: "אמת"
  # ✅ @Adarwall
try: "נסה"
  # ✅ @Adarwall
typedef: ""
typeid: ""
typename: ""
union: ""
unsigned: ""
using: ""
virtual: ""
void: "ריק"
  # ✅ @Adarwall
volatile: ""
wchar_t: ""
while: "כל_עוד"
  # ✅ @Adarwall
xor: ""
xor_eq: ""

# << Error Messages >>

# ----------------------
# |   LANGUAGE: C#     |
# ----------------------
# << Keywords >>
abstract: ""
add: ""
alias: ""
as: ""
ascending: ""
async: "בסנכרון"
  # ✅ @Adarwall
await: "המתן"
  # ✅ @Adarwall
base: ""
bool: ""
break: ""
byte: ""
case: ""
catch: "תפוס"
  # ✅ @Adarwall
char: "תו"
  # ✅ @Adarwall
checked: ""
class: "מחלקה"
  # ✅ @Adarwall
const: ""
continue: ""
decimal: ""
default: ""
delegate: ""
descending: ""
do: ""
double: "ממשי"
  # ✅ @Adarwall
dynamic: ""
else: "אחרת"
  # ✅ @Adarwall
enum: ""
event: ""
explicit: ""
extern: ""
false: "שקר"
  # ✅ @Adarwall
finally: ""
fixed: ""
float: ""
for: "לכל"
  # ✅ @Adarwall
foreach: ""
from: ""
get: ""
global: ""
goto: ""
group: ""
if: "אם"
  # ✅ @Adarwall
implicit: ""
in: ""
int: "שלם"
  # ✅ @Adarwall
interface: ""
internal: ""
into: ""
is: ""
join: ""
let: ""
lock: ""
long: ""
namespace: ""
new: "חדש"
  # ✅ @Adarwall
null: "כלום"
  # ✅ @Adarwall
object: ""
operator: ""
orderby: ""
out: ""
override: ""
params: ""
partial: ""
private: "פרטי"
  # ✅ @Adarwall
protected: ""
public: "ציבורי"
  # ✅ @Adarwall
readonly: ""
ref: ""
remove: ""
return: "החזר"
  # ✅ @Adarwall
sbyte: ""
sealed: ""
select: ""
set: ""
short: ""
sizeof: ""
stackalloc: ""
static: ""
string: ""
struct: ""
switch: ""
this: "זה"
  # ✅ @Adarwall
throw: ""
true: "אמת"
  # ✅ @Adarwall
try: ""
typeof: "מסוג"
  # ✅ @Adarwall
uint: ""
ulong: ""
unchecked: ""
unsafe: ""
ushort: ""
using: ""
value: ""
var: ""
virtual: ""
void: ""
volatile: ""
where: ""
while: "כל_עוד"
  # ✅ @Adarwall
yield: ""

# << Error Messages >>

# ----------------------
# |   LANGUAGE: CSS    |
# ----------------------
# This regex saved by butt: FIND = \n(@?)(\w+)(-\w+){0,3} REPLACE: \n$1$2$3: "" #

# << Keywords >>
align-content: "יישור-תוכן" #	Specifies the alignment between the lines inside a flexible container when the items do not use all available space
  # ✅ @Adarwall
align-items: "יישור-פריטים" #	Specifies the alignment for items inside a flexible container
  # ✅ @Adarwall
align-self: "יישור-עצמי" #	Specifies the alignment for selected items inside a flexible container
  # ✅ @Adarwall
all: "" #	Resets all properties (except unicode-bidi and direction)
animation: "אנימציה" #	A shorthand property for all the animation-* properties
  # ✅ @Adarwall
animation-delay: "" #	Specifies a delay for the start of an animation
animation-direction: "אנימציה-כיוון" #	Specifies whether an animation should be played forwards, backwards or in alternate cycles
  # ✅ @Adarwall
animation-duration: "אנימציה-משך-זמן" #	Specifies how long an animation should take to complete one cycle
  # ✅ @Adarwall
animation-mode: "" #	Specifies a style for the element when the animation is not playing (before it starts, after it ends, or both)
animation-count: "" #	Specifies the number of times an animation should be played
animation-name: "אנימציה-שם" #	Specifies a name for the @keyframes animation
  # ✅ @Adarwall
animation-state: "" #	Specifies whether the animation is running or paused
animation-function: "" #	Specifies the speed curve of an animation
backface-visibility: "" #	Defines whether or not the back face of an element should be visible when facing the user
background: "רקע" #	A shorthand property for all the background-* properties
  # ✅ @Adarwall
background-attachment: "" #	Sets whether a background image scrolls with the rest of the page, or is fixed
background-mode: "" #	Specifies the blending mode of each background layer (color/image)
background-clip: "" #	Defines how far the background (color or image) should extend within an element
background-color: "רקע-צבע" #	Specifies the background color of an element
  # ✅ @Adarwall
background-image: "" #	Specifies one or more background images for an element
background-origin: "" #	Specifies the origin position of a background image
background-position: "" #	Specifies the position of a background image
background-repeat: "" #	Sets if/how a background image will be repeated
background-size: "רקע-גודל" #	Specifies the size of the background images
  # ✅ @Adarwall
border: "מסגרת" #	A shorthand property for border-width, border-style and border-color
  # ✅ @Adarwall
border-bottom: "מסגרת-תחתית" #	A shorthand property for border-bottom-width, border-bottom-style and border-bottom-color
  # ✅ @Adarwall
border-color: "מסגרת-צבע" #	Sets the color of the bottom border
  # ✅ @Adarwall
border-radius: "" #	Defines the radius of the border of the bottom-left corner
border-radius: "" #	Defines the radius of the border of the bottom-right corner
border-style: "" #	Sets the style of the bottom border
border-width: "" #	Sets the width of the bottom border
border-collapse: "" #	Sets whether table borders should collapse into a single border or be separated
border-color: "" #	Sets the color of the four borders
border-image: "" #	A shorthand property for all the border-image-* properties
border-outset: "" #	Specifies the amount by which the border image area extends beyond the border box
border-repeat: "" #	Specifies whether the border image should be repeated, rounded or stretched
border-slice: "" #	Specifies how to slice the border image
border-source: "" #	Specifies the path to the image to be used as a border
border-width: "" #	Specifies the width of the border image
border-left: "" #	A shorthand property for all the border-left-* properties
border-color: "" #	Sets the color of the left border
border-style: "" #	Sets the style of the left border
border-width: "עובי-מסגרת" #	Sets the width of the left border
  # ✅ @Adarwall
border-radius: "" #	A shorthand property for the four border-*-radius properties
border-right: "" #	A shorthand property for all the border-right-* properties
border-color: "" #	Sets the color of the right border
border-style: "" #	Sets the style of the right border
border-width: "" #	Sets the width of the right border
border-spacing: "" #	Sets the distance between the borders of adjacent cells
border-style: "" #	Sets the style of the four borders
border-top: "" #	A shorthand property for border-top-width, border-top-style and border-top-color
border-color: "" #	Sets the color of the top border
border-radius: "" #	Defines the radius of the border of the top-left corner
border-radius: "" #	Defines the radius of the border of the top-right corner
border-style: "" #	Sets the style of the top border
border-width: "" #	Sets the width of the top border
border-width: "" #	Sets the width of the four borders
bottom: "תחתית" #	Sets the elements position, from the bottom of its parent element
  # ✅ @Adarwall
box-break: "" #	Sets the behavior of the background and border of an element at page-break, or, for in-line elements, at line-break.
box-shadow: "צל" #	Attaches one or more shadows to an element
  # ✅ @Adarwall
box-sizing: "" #	Defines how the width and height of an element are calculated: should they include padding and borders, or not
break-after: "" #	Specifies the page-, column-, or region-break behavior after the generated box
break-before: "" #	Specifies the page-, column-, or region-break behavior before the generated box
break-inside: "" #	Specifies the page-, column-, or region-break behavior inside the generated box
caption-side: "" #	Specifies the placement of a table caption
caret-color: "" #	Specifies the color of the cursor (caret) in inputs, textareas, or any element that is editable
@charset: "" #	Specifies the character encoding used in the style sheet
clear: "" #	Specifies on which sides of an element floating elements are not allowed to float
clip: "" #	Clips an absolutely positioned element
color: "צבע" #	Sets the color of text
  # ✅ @Adarwall
column-count: "" #	Specifies the number of columns an element should be divided into
column-fill: "" #	Specifies how to fill columns, balanced or not
column-gap: "" #	Specifies the gap between the columns
column-rule: "" #	A shorthand property for all the column-rule-* properties
column-color: "" #	Specifies the color of the rule between columns
column-style: "" #	Specifies the style of the rule between columns
column-width: "" #	Specifies the width of the rule between columns
column-span: "" #	Specifies how many columns an element should span across
column-width: "" #	Specifies the column width
columns: "" #	A shorthand property for column-width and column-count
content: "" #	Used with the :before and :after pseudo-elements, to insert generated content
counter-increment: "" #	Increases or decreases the value of one or more CSS counters
counter-reset: "" #	Creates or resets one or more CSS counters
cursor: "" #	Specifies the mouse cursor to be displayed when pointing over an element
direction: "" #	Specifies the text direction/writing direction
display: "תצוגה" #	Specifies how a certain HTML element should be displayed
  # ✅ @Adarwall
empty-cells: "" #	Specifies whether or not to display borders and background on empty cells in a table
filter: "" #	Defines effects (e.g. blurring or color shifting) on an element before the element is displayed
flex: "" #	A shorthand property for the flex-grow, flex-shrink, and the flex-basis properties
flex-basis: "" #	Specifies the initial length of a flexible item
flex-direction: "" #	Specifies the direction of the flexible items
flex-flow: "" #	A shorthand property for the flex-direction and the flex-wrap properties
flex-grow: "" #	Specifies how much the item will grow relative to the rest
flex-shrink: "" #	Specifies how the item will shrink relative to the rest
flex-wrap: "" #	Specifies whether the flexible items should wrap or not
float: "" #	Specifies whether or not a box should float
font: "פונט" #	A shorthand property for the font-style, font-variant, font-weight, font-size/line-height, and the font-family properties
  # ✅ @Adarwall
@font-face: "" #	A rule that allows websites to download and use fonts other than the "web-safe" fonts
font-family: "פונט-משפחה" #	Specifies the font family for text
  # ✅ @Adarwall
font-settings: "" #	Allows control over advanced typographic features in OpenType fonts
@font-values: "" #	Allows authors to use a common name in font-variant-alternate for feature activated differently in OpenType
font-kerning: "" #	Controls the usage of the kerning information (how letters are spaced)
font-override: "" #	Controls the usage of language-specific glyphs in a typeface
font-size: "פונט-גודל" #	Specifies the font size of text
  # ✅ @Adarwall
font-adjust: "" #	Preserves the readability of text when font fallback occurs
font-stretch: "" #	Selects a normal, condensed, or expanded face from a font family
font-style: "" #	Specifies the font style for text
font-synthesis: "" #	Controls which missing typefaces (bold or italic) may be synthesized by the browser
font-variant: "" #	Specifies whether or not a text should be displayed in a small-caps font
font-alternates: "" #	Controls the usage of alternate glyphs associated to alternative names defined in @font-feature-values
font-caps: "" #	Controls the usage of alternate glyphs for capital letters
font-asian: "" #	Controls the usage of alternate glyphs for East Asian scripts (e.g Japanese and Chinese)
font-ligatures: "" #	Controls which ligatures and contextual forms are used in textual content of the elements it applies to
font-numeric: "" #	Controls the usage of alternate glyphs for numbers, fractions, and ordinal markers
font-position: "" #	Controls the usage of alternate glyphs of smaller size positioned as superscript or subscript regarding the baseline of the font
font-weight: "פונט-משקל" #	Specifies the weight of a font
  # ✅ @Adarwall
grid: "" #  A shorthand property for the grid-template-rows, grid-template-columns, grid-template-areas, grid-auto-rows, grid-auto-columns, and the grid-auto-flow properties
grid-area: "" #	Either specifies a name for the grid item, or this property is a shorthand property for the grid-row-start, grid-column-start, grid-row-end, and grid-column-end properties
grid-columns: "" #	Specifies a default column size
grid-flow: "" #	Specifies how auto-placed items are inserted in the grid
grid-rows: "" #	Specifies a default row size
grid-column: "" #	A shorthand property for the grid-column-start and the grid-column-end properties
grid-end: "" #	Specifies where to end the grid item
grid-gap: "" #	Specifies the size of the gap between columns
grid-start: "" #	Specifies where to start the grid item
grid-gap: "" #	A shorthand property for the grid-row-gap and grid-column-gap properties
grid-row: "" #	A shorthand property for the grid-row-start and the grid-row-end properties
grid-end: "" #	Specifies where to end the grid item
grid-gap: "" #	Specifies the size of the gap between rows
grid-start: "" #	Specifies where to start the grid item
grid-template: "" #	A shorthand property for the grid-template-rows, grid-template-columns and grid-areas properties
grid-areas: "" #	Specifies how to display columns and rows, using named grid items
grid-columns: "" #	Specifies the size of the columns, and how many columns in a grid layout
grid-rows: "" #	Specifies the size of the rows in a grid layout
hanging-punctuation: "" #	Specifies whether a punctuation character may be placed outside the line box
height: "גובה" #	Sets the height of an element
  # ✅ @Adarwall
hyphens: "" #	Sets how to split words to improve the layout of paragraphs
image-rendering: "" #	Gives a hint to the browser about what aspects of an image are most important to preserve when the image is scaled
@import: "ייבא" #	Allows you to import a style sheet into another style sheet
  # ✅ @Adarwall
isolation: "" #	Defines whether an element must create a new stacking content
justify-content: "" #	Specifies the alignment between the items inside a flexible container when the items do not use all available space
@keyframes: "" #	Specifies the animation code
left: "שמאל" #	Specifies the left position of a positioned element
  # ✅ @Adarwall
letter-spacing: "ריווח-אותיות" #	Increases or decreases the space between characters in a text
  # ✅ @Adarwall
line-break: "שבירת-שורה" #	Specifies how/if to break lines
  # ✅ @Adarwall
line-height: "גובה-שורה" #	Sets the line height
  # ✅ @Adarwall
list-style: "" #	Sets all the properties for a list in one declaration
list-image: "" #	Specifies an image as the list-item marker
list-position: "" #	Specifies the position of the list-item markers (bullet points)
list-type: "" #	Specifies the type of list-item marker
margin: "ריווח-חוץ" #	Sets all the margin properties in one declaration
  # ✅ @Adarwall
margin-bottom: "ריווח-חוץ-למטה" #	Sets the bottom margin of an element
  # ✅ @Adarwall
margin-left: "ריווח-חוץ-שמאל" #	Sets the left margin of an element
  # ✅ @Adarwall
margin-right: "ריווח-חוץ-ימין" #	Sets the right margin of an element
  # ✅ @Adarwall
margin-top: "ריווח-חוץ-למעלה" #	Sets the top margin of an element
  # ✅ @Adarwall
max-height: "" #	Sets the maximum height of an element
max-width: "" #	Sets the maximum width of an element
@media: "" #	Sets the style rules for different media types/devices/sizes
min-height: "" #	Sets the minimum height of an element
min-width: "" #	Sets the minimum width of an element
mix-mode: "" #	Specifies how an element's content should blend with its direct parent background
object-fit: "" #	Specifies how the contents of a replaced element should be fitted to the box established by its used height and width
object-position: "" #	Specifies the alignment of the replaced element inside its box
opacity: "שקיפות" #	Sets the opacity level for an element
  # ✅ @Adarwall
order: "" #	Sets the order of the flexible item, relative to the rest
orphans: "" #	Sets the minimum number of lines that must be left at the bottom of a page when a page break occurs inside an element
outline: "" #	A shorthand property for the outline-width, outline-style, and the outline-color properties
outline-color: "" #	Sets the color of an outline
outline-offset: "" #	Offsets an outline, and draws it beyond the border edge
outline-style: "" #	Sets the style of an outline
outline-width: "" #	Sets the width of an outline
overflow: "" #
Specifies: "" # what happens if content overflows an element's box
overflow-wrap: "" #	Specifies whether or not the browser may break lines within words in order to prevent overflow (when a string is too long to fit its containing box)
overflow-x: "" #	Specifies whether or not to clip the left/right edges of the content, if it overflows the element's content area
overflow-y: "" #	Specifies whether or not to clip the top/bottom edges of the content, if it overflows the element's content area
padding: "ריווח-פנים" #	A shorthand property for all the padding-* properties
  # ✅ @Adarwall
padding-bottom: "ריווח-פנים-למטה" #	Sets the bottom padding of an element
  # ✅ @Adarwall
padding-left: "ריווח-פנים-שמאל" #	Sets the left padding of an element
  # ✅ @Adarwall
padding-right: "ריווח-פנים-ימין" #	Sets the right padding of an element
  # ✅ @Adarwall
padding-top: "ריווח-פנים-למעלה" #	Sets the top padding of an element
  # ✅ @Adarwall
page-after: "" #	Sets the page-break behavior after an element
page-before: "" #: "" #	Sets the page-break behavior before an element
page-inside: "" #: "" #	Sets the page-break behavior inside an element
perspective: "" #	Gives a 3D-positioned element some perspective
perspective-origin: "" #	Defines at which position the user is looking at the 3D-positioned element
pointer-events: "" #	Defines whether or not an element reacts to pointer events
position: "" #	Specifies the type of positioning method used for an element (static, relative, absolute or fixed)
quotes: "" #	Sets the type of quotation marks for embedded quotations
resize: "שנה-גודל" #	Defines if (and how) an element is resizable by the user
  # ✅ @Adarwall
right: "ימין" #	Specifies the right position of a positioned element
  # ✅ @Adarwall
scroll-behavior: "אופן-גלילה" #	Specifies whether to smoothly animate the scroll position in a scrollable box, instead of a straight jump
  # ✅ @Adarwall
tab-size: "" #	Specifies the width of a tab character
table-layout: "" #	Defines the algorithm used to lay out table cells, rows, and columns
text-align: "מלל-כיוון" #	Specifies the horizontal alignment of text
  # ✅ @Adarwall
text-last: "" #	Describes how the last line of a block or a line right before a forced line break is aligned when text-align is "justify"
text-upright: "" #	Specifies the combination of multiple characters into the space of a single character
text-decoration: "" #	Specifies the decoration added to text
text-color: "מלל-צבע" #	Specifies the color of the text-decoration
  # ✅ @Adarwall
text-line: "" #	Specifies the type of line in a text-decoration
text-style: "" #	Specifies the style of the line in a text decoration
text-indent: "" #	Specifies the indentation of the first line in a text-block
text-justify: "" #	Specifies the justification method used when text-align is "justify"
text-orientation: "" #: "" 	#Defines the orientation of the text in a line
text-overflow: "" #: "" 	#Specifies what should happen when text overflows the containing element
text-shadow: "" #: "" 	#Adds shadow to text
text-transform: "" #: "" 	#Controls the capitalization of text
text-position: "" #: "" #	Specifies the position of the underline which is set using the text-decoration property
top: "למעלה" #: "" #	Specifies the top position of a positioned element
  # ✅ @Adarwall
transform: "" #: "" #	Applies a 2D or 3D transformation to an element
transform-origin: "" #	Allows you to change the position on transformed elements
transform-style: "" #	Specifies how nested elements are rendered in 3D space
transition: "" #	A shorthand property for all the transition-* properties
transition-delay: "" #	Specifies when the transition effect will start
transition-duration: "" #	Specifies how many seconds or milliseconds a transition effect takes to complete
transition-property: "" #	Specifies the name of the CSS property the transition effect is for
transition-function: "" #	Specifies the speed curve of the transition effect
unicode-bidi: "" #	Used together with the direction property to set or return whether the text should be overridden to support multiple languages in the same document
user-select: "" #	Specifies whether the text of an element can be selected
vertical-align: "" #	Sets the vertical alignment of an element
visibility: "" #	Specifies whether or not an element is visible
white-space: "" #	Specifies how white-space inside an element is handled
widows: "" #	Sets the minimum number of lines that must be left at the top of a page when a page break occurs inside an element
width: "רוחב" #	Sets the width of an element
  # ✅ @Adarwall
word-break: "" #	Specifies how words should break when reaching the end of a line
word-spacing: "" #	Increases or decreases the space between words in a text
word-wrap: "" #	Allows long, unbreakable words to be broken and wrap to the next line
writing-mode: "" #	Specifies whether lines of text are laid out horizontally or vertically
z-index: "שכבה" #	Sets the stack order of a positioned element
  # ✅ @Adarwall
# << Error Messages >>

# ------------------------
# |   LANGUAGE: FLUENT   |
# ------------------------
# << Keywords >>
# << Error Messages >>

# ------------------------
# |   LANGUAGE: GOLANG   |
# ------------------------
# << Keywords >>
break: ""
default: ""
func: ""
interface: ""
select: ""
case: ""
defer: ""
go: ""
map: ""
struct: ""
chan: ""
else: "אחרת"
  # ✅ @Adarwall
goto: ""
package: "חבילה"
  # ✅ @Adarwall
switch: ""
const: ""
fallthrough: ""
if: "אם"
  # ✅ @Adarwall
range: ""
type: ""
continue: ""
for: "לכל"
  # ✅ @Adarwall
import: "ייבא"
  # ✅ @Adarwall
return: "החזר"
  # ✅ @Adarwall
var: ""

# << Error Messages >>

# -------------------------
# |   LANGUAGE: HASKELL   |
# -------------------------
# << Keywords >>
as: ""
case: ""
of: ""
class: "מחלקה"
  # ✅ @Adarwall
data: ""
data family: ""
data instance: ""
default: ""
deriving: ""
deriving instance: ""
do: ""
forall: ""
foreign: ""
hiding: ""
if: "אם"
  # ✅ @Adarwall
then: ""
else: "אחרת"
  # ✅ @Adarwall
import: "ייבא"
  # ✅ @Adarwall
infix: ""
infixl: ""
infixr: ""
instance: ""
let: ""
in: ""
mdo: ""
module: ""
newtype: ""
proc: ""
qualified: ""
rec: ""
type: ""
type family: ""
type instance: ""
where: ""

# << Error Messages >>

# ----------------------
# |   LANGUAGE: HTML   |
# ----------------------
# << Keywords >>
!DOCTYPE: "סוג_מסמך" #	Defines the document type
  # ✅ @Adarwall
a: "קישור" #	Defines a hyperlink
  # ✅ @Adarwall
abbr: "" #	Defines an abbreviation or an acronym
acronym: "" #	Not supported in HTML5. Use <abbr> instead. Defines an acronym
address: "" #	Defines contact information for the author/owner of a document
applet: "" #	Not supported in HTML5. Use <embed> or <object> instead. Defines an embedded applet
area: "" #	Defines an area inside an image-map
article: "" #	Defines an article
aside: "" #	Defines content aside from the page content
audio: "" #	Defines sound content
b: "מודגש" #	Defines bold text
  # ✅ @Adarwall
base: "" #	Specifies the base URL/target for all relative URLs in a document
basefont: "" #	Not supported in HTML5. Use CSS instead. Specifies a default color, size, and font for all text in a document
bdi: "יישור" #	Isolates a part of text that might be formatted in a different direction from other text outside it
  # ✅ @Adarwall
bdo: "" #	Overrides the current text direction
big: "" #	Not supported in HTML5. Use CSS instead. Defines big text
blockquote: "" #	Defines a section that is quoted from another source
body: "גוף" #	Defines the document's body
  # ✅ @Adarwall
br: "הפסקה" #	Defines a single line break
  # ✅ @Adarwall
button: "כפתור" #	Defines a clickable button
  # ✅ @Adarwall
canvas: "קאנבס" #	Used to draw graphics, on the fly, via scripting (usually JavaScript)
  # ✅ @Adarwall
caption: "" #	Defines a table caption
center: "" #	Not supported in HTML5. Use CSS instead. Defines centered text
cite: "" #	Defines the title of a work
code: "" #	Defines a piece of computer code
col: "" #	Specifies column properties for each column within a <colgroup> element
colgroup: "" #	Specifies a group of one or more columns in a table for formatting
data: "" #	Links the given content with a machine-readable translation
datalist: "" #	Specifies a list of pre-defined options for input controls
dd: "" #	Defines a description/value of a term in a description list
del: "" #	Defines text that has been deleted from a document
details: "" #	Defines additional details that the user can view or hide
dfn: "" #	Represents the defining instance of a term
dialog: "" #	Defines a dialog box or window
dir: "" #	Not supported in HTML5. Use <ul> instead. Defines a directory list
div: "חלקה" #	Defines a section in a document
  # ✅ @Adarwall
dl: "" #	Defines a description list
dt: "" #	Defines a term/name in a description list
em: "" #	Defines emphasized text
embed: "" #	Defines a container for an external (non-HTML) application
fieldset: "" #	Groups related elements in a form
figcaption: "" #	Defines a caption for a <figure> element
figure: "" #	Specifies self-contained content
font: "פונט" #	Not supported in HTML5. Use CSS instead. Defines font, color, and size for text
  # ✅ @Adarwall
footer: "תחתית" #	Defines a footer for a document or section
  # ✅ @Adarwall
form: "טופס" #	Defines an HTML form for user input
  # ✅ @Adarwall
frame: "" #	Not supported in HTML5. Defines a window (a frame) in a frameset
frameset: "" #	Not supported in HTML5. Defines a set of frames
h1: "כותרת" # to <h6>	Defines HTML headings
  # ✅ @Adarwall
head: "" #	Defines information about the document
header: "" #	Defines a header for a document or section
hr: "" #	Defines a thematic change in the content
html: "html" #	Defines the root of an HTML document
i: "" #	Defines a part of text in an alternate voice or mood
iframe: "" #	Defines an inline frame
img: "תמונה" #	Defines an image
  # ✅ @Adarwall
input: "קלט" #	Defines an input control
  # ✅ @Adarwall
ins: "" #	Defines a text that has been inserted into a document
kbd: "" #	Defines keyboard input
label: "" #	Defines a label for an <input> element
legend: "" #	Defines a caption for a <fieldset> element
li: "רשימה" #	Defines a list item
  # ✅ @Adarwall
link: "" #	Defines the relationship between a document and an external resource (most used to link to style sheets)
main: "" #	Specifies the main content of a document
map: "" #	Defines a client-side image-map
mark: "" #	Defines marked/highlighted text
meta: "" #	Defines metadata about an HTML document
meter: "" #	Defines a scalar measurement within a known range (a gauge)
nav: "" #	Defines navigation links
noframes: "" #	Not supported in HTML5. Defines an alternate content for users that do not support frames
noscript: "" #	Defines an alternate content for users that do not support client-side scripts
object: "אובייקט" #	Defines an embedded object
  # ✅ @Adarwall
ol: "רשימה_סדורה" #	Defines an ordered list
  # ✅ @Adarwall
optgroup: "" #	Defines a group of related options in a drop-down list
option: "" #	Defines an option in a drop-down list
output: "" #	Defines the result of a calculation
p: "פסקה" #	Defines a paragraph
  # ✅ @Adarwall
param: "" #	Defines a parameter for an object
picture: "" #	Defines a container for multiple image resources
pre: "" #	Defines preformatted text
progress: "" #	Represents the progress of a task
q: "" #	Defines a short quotation
rp: "" #	Defines what to show in browsers that do not support ruby annotations
rt: "" #	Defines an explanation/pronunciation of characters (for East Asian typography)
ruby: "" #	Defines a ruby annotation (for East Asian typography)
s: "" #	Defines text that is no longer correct
samp: "" #	Defines sample output from a computer program
script: "" #	Defines a client-side script
section: "מקטע" #	Defines a section in a document
  # ✅ @Adarwall
select: "תפריט_יורד" #	Defines a drop-down list
  # ✅ @Adarwall
small: "" #	Defines smaller text
source: "" #	Defines multiple media resources for media elements (<video> and <audio>)
span: "" #	Defines a section in a document
strike: "" #	Not supported in HTML5. Use <del> or <s> instead. Defines strikethrough text
strong: "חשוב" #	Defines important text
  # ✅ @Adarwall
style: "סטייל" #	Defines style information for a document
  # ✅ @Adarwall
sub: "" #	Defines subscripted text
summary: "" #	Defines a visible heading for a <details> element
sup: "" #	Defines superscripted text
svg: "" #	Defines a container for SVG graphics
table: "טבלה" #	Defines a table
  # ✅ @Adarwall
tbody: "" #	Groups the body content in a table
td: "" #	Defines a cell in a table
template: "" #	Defines a template
textarea: "קלט_שורות" #	Defines a multiline input control (text area)
  # ✅ @Adarwall
tfoot: "" #	Groups the footer content in a table
th: "" #	Defines a header cell in a table
thead: "" #	Groups the header content in a table
time: "" #	Defines a date/time
title: "כותרת" #	Defines a title for the document
  # ✅ @Adarwall
tr: "" #	Defines a row in a table
track: "" #	Defines text tracks for media elements (<video> and <audio>)
tt: "" #	Not supported in HTML5. Use CSS instead. Defines teletype text
u: "" #	Defines text that should be stylistically different from normal text
ul: "" #	Defines an unordered list
var: "משתנה" #	Defines a variable
  # ✅ @Adarwall
video: "" #	Defines a video or movie
wbr: "" #	Defines a possible line-break

# << Error Messages >>

# ----------------------
# |   LANGUAGE: JAVA   |
# ----------------------
# << Keywords >>
abstract: ""
continue: ""
for: "לכל"
  # ✅ @Adarwall
new: "חדש"
  # ✅ @Adarwall
switch: "סנן"
  # ✅ @Adarwall
assert: ""
default: "ברירת_מחדל"
  # ✅ @Adarwall
goto: ""
package: "חבילה"
  # ✅ @Adarwall
synchronized: ""
boolean: ""
do: ""
if: "אם"
  # ✅ @Adarwall
private: "פרטי"
  # ✅ @Adarwall
this: "זה"
  # ✅ @Adarwall
break: "לשבור"
  # ✅ @Adarwall
double: "ממשי"
  # ✅ @Adarwall
implements: ""
protected: ""
throw: "זרוק"
  # ✅ @Adarwall
byte: ""
else: "אחרת"
  # ✅ @Adarwall
import: "ייבא"
  # ✅ @Adarwall
public: "ציבורי"
  # ✅ @Adarwall
throws: ""
case: "מקרה"
  # ✅ @Adarwall
enum: ""
instanceof: ""
return: "החזר"
  # ✅ @Adarwall
transient: ""
catch: "תפוס"
  # ✅ @Adarwall
extends: ""
int: "שלם"
  # ✅ @Adarwall
short: "שלם_קצר"
  # ✅ @Adarwall
try: "נסה"
  # ✅ @Adarwall
char: "תו"
  # ✅ @Adarwall
final: "קבוע"
  # ✅ @Adarwall
interface: ""
static: "סטטי"
  # ✅ @Adarwall
void: "ריק"
  # ✅ @Adarwall
class: "מחלקה"
  # ✅ @Adarwall
finally: "לבסוף"
  # ✅ @Adarwall
long: "שלם_ממש_גדול"
  # ✅ @Adarwall
strictfp: ""
volatile: ""
const: "קבוע"
  # ✅ @Adarwall
float: "ממשי_גדול"
  # ✅ @Adarwall
native: ""
super: ""
while: "כל_עוד"
  # ✅ @Adarwall
_: "_" #_(underscore)

# << Error Messages >>

# ----------------------------
# |   LANGUAGE: JAVASCRIPT   |
# ----------------------------
# << Keywords >>
arguments: ""
  # 👀 @Adarwall
  # ✅ @tomerpacific "ארגומנטים"
await: "המתן"
  # ✅ @Adarwall
  # ✅ @tomerpacific
break: "לשבור"
  # ✅ @Adarwall
  # ❓ @tomerpacific - Should be "שבור" as this is the action taken
case: "מקרה"
  # ✅ @Adarwall
  # ✅ @tomerpacific
catch: "תפוס"
  # ✅ @Adarwall
  # ✅ @tomerpacific
class: "מחלקה"
  # ✅ @Adarwall
  # ✅ @tomerpacific
const: "קבוע"
  # ✅ @Adarwall
  # ✅ @tomerpacific
continue: "המשך"
  # ✅ @Adarwall
  # ✅ @tomerpacific
debugger: ""
  # 👀 @Adarwall
  # ✅ @tomerpacific "דיבאגר"
default: "ברירת_מחדל"
  # ✅ @Adarwall
  # ✅ @tomerpacific
delete: "מחק"
  # ✅ @Adarwall
  # ✅ @tomerpacific
do: "תעשה"
  # ✅ @Adarwall
  # ✅ @tomerpacific
else: "אחרת"
  # ✅ @Adarwall
  # ✅ @tomerpacific
enum: ""
  # 👀 @Adarwall
  # 🤔 @tomerpacific - There are no enums in JavaScript
eval: ""
  # 👀 @Adarwall
  # ✅ @tomerpacific "שערך"
export: "יצוא"
  # ✅ @Adarwall
  # ✅ @tomerpacific
extends: "הרחב"
  # ✅ @Adarwall
  # ✅ @tomerpacific
false: "שקר"
  # ✅ @Adarwall
  # ✅ @tomerpacific
finally: "לבסוף"
  # ✅ @Adarwall
  # ✅ @tomerpacific
for: "לכל"
  # ✅ @Adarwall
  # ✅ @tomerpacific
from: "מ"
  # ✅ @Adarwall
  # ✅ @tomerpacific
function: "פעולה"
  # ✅ @Adarwall
  # ✅ @tomerpacific
if: "אם"
  # ✅ @Adarwall
  # ✅ @tomerpacific
implements: ""
  # 👀 @Adarwall
  # ✅ @tomerpacific "מממש"
import: "ייבוא"
  # ✅ @Adarwall
  # ✅ @tomerpacific
in: "ב"
  # ✅ @Adarwall
  # ❓ @tomerpacific - Consider using "בתוך"
instanceof: ""
  # 👀 @Adarwall
  # ✅ @tomerpacific "מופע_של"
interface: ""
  # 👀 @Adarwall
  # ✅ @tomerpacific "ממשק"
let: "משתנה"
  # ✅ @Adarwall
  # ❓ @tomerpacific - Let is used to define a blocked scoped variable so maybe use the term "משתנה_לוקאלי"?
new: "חדש"
  # ✅ @Adarwall
  # ✅ @tomerpacific
null: "כלום"
  # ✅ @Adarwall
  # ✅ @tomerpacific
package: "חבילה"
  # ✅ @Adarwall
  # ✅ @tomerpacific
private: "פרטי"
  # ✅ @Adarwall
  # ✅ @tomerpacific
protected: "מוגן"
  # ✅ @Adarwall
  # ✅ @tomerpacific
public: "ציבורי"
  # ✅ @Adarwall
  # ✅ @tomerpacific
return: "החזר"
  # ✅ @Adarwall
  # ✅ @tomerpacific
static: "סטטי"
  # ✅ @Adarwall
  # ✅ @tomerpacific
super: ""
  # 👀 @Adarwall
  # ✅ @tomerpacific "קריאה_למחלקת_אם"
switch: "סנן"
  # ✅ @Adarwall
  # ❓ @tomerpacific - Switch statements are used to break down values of a variable so the current term is less fitting in my opinion. Maybe consider "בורר_מקרים"?
this: "זה"
  # ✅ @Adarwall
  # ✅ @tomerpacific
throw: "זרוק"
  # ✅ @Adarwall
  # ✅ @tomerpacific
true: "אמת"
  # ✅ @Adarwall
  # ✅ @tomerpacific
try: "נסה"
  # ✅ @Adarwall
  # ✅ @tomerpacific
typeof: "פורמט"
  # ✅ @Adarwall
  # ❓ @tomerpacific - Typeof is used to find the type of a variable so I suggest using "סוג_של"
var: "משתנה_כללי"
  # ✅ @Adarwall
  # ✅ @tomerpacific
void: "ריק"
  # ✅ @Adarwall
  # ✅ @tomerpacific
while: "כל_עוד"
  # ✅ @Adarwall
  # ✅ @tomerpacific
with: "עם"
  # ✅ @Adarwall
  # ✅ @tomerpacific
yield: "השהה"
  # 👀 @Adarwall
  # ✅ @tomerpacific "השהה"
# << Error Messages >>

# ----------------------
# |   LANGUAGE: JULIA  |
# ----------------------
# << Keywords >>
begin: ""
while: "כל_עוד"
  # ✅ @Adarwall
if: "אם"
  # ✅ @Adarwall
for: "לכל"
  # ✅ @Adarwall
try: ""
return: "החזר"
  # ✅ @Adarwall
break: ""
continue: ""
function: ""
macro: ""
quote: ""
let: ""
local: ""
global: ""
const: ""
do: ""
struct: ""
abstract: "" #to be deprecated
typealias: "" #to be deprecated
bitstype: "" #to be deprecated
type: "" #to be deprecated
immutable: ""  #to be deprecated
module: ""
baremodule: ""
using: ""
import: "ייבא"
  # ✅ @Adarwall
export: ""
importall: ""
end: ""
else: "אחרת"
  # ✅ @Adarwall
catch: ""
finally: ""
true: "אמת"
  # ✅ @Adarwall
false: "שקר"
  # ✅ @Adarwall

# << Error Messages >>

# ----------------------
# |   LANGUAGE: JSDOC  |
# ----------------------
# << Keywords >>
@abstract: "" #(synonyms: @virtual) This member must be implemented (or overridden) by the inheritor.
@access: "" # Specify the access level of this member (private, package-private, public, or protected).
@alias: "" # Treat a member as if it had a different name.
@async: "" # Indicate that a function is asynchronous.
@augments: "" #(synonyms: @extends) Indicate that a symbol inherits from, and adds to, a parent symbol.
@author: "" # Identify the author of an item.
@borrows: "" # This object uses something from another object.
@callback: "" # Document a callback function.
@class: "מחלקה" #(synonyms: @constructor) This function is intended to be called with the "new" keyword.
  # ✅ @Adarwall
@classdesc: "" # Use the following text to describe the entire class.
@constant: "" #(synonyms: @const) Document an object as a constant.
@constructs: "" # This function member will be the constructor for the previous class.
@copyright: "" # Document some copyright information.
@default: "" #(synonyms: @defaultvalue) Document the default value.
@deprecated: "" # Document that this is no longer the preferred way.
@description: "" #(synonyms: @desc) Describe a symbol.
@enum: "" # Document a collection of related properties.
@event: "" # Document an event.
@example: "" # Provide an example of how to use a documented item.
@exports: "" # Identify the member that is exported by a JavaScript module.
@external: "" #(synonyms: @host) Identifies an external class, namespace, or module.
@file: "" #(synonyms: @fileoverview, @overview) Describe a file.
@fires: "" #(synonyms: @emits) Describe the events this method may fire.
@function: "" #(synonyms: @func, @method) Describe a function or method.
@generator: "" # Indicate that a function is a generator function.
@global: "" # Document a global object.
@hideconstructor: "" # Indicate that the constructor should not be displayed.
@ignore: "" # Omit a symbol from the documentation.
@implements: "" # This symbol implements an interface.
@inheritdoc: "" # Indicate that a symbol should inherit its parent's documentation.
@inner: "" # Document an inner object.
@instance: "" # Document an instance member.
@interface: "" # This symbol is an interface that others can implement.
@kind: "" # What kind of symbol is this?
@lends: "" # Document properties on an object literal as if they belonged to a symbol with a given name.
@license: "" # Identify the license that applies to this code.
@listens: "" #List the events that a symbol listens for.
@member: "" #(synonyms: @var)Document a member.
@memberof: "" #This symbol belongs to a parent symbol.
@mixes: "" #This object mixes in all the members from another object.
@mixin: "" #Document a mixin object.
@module: "" #Document a JavaScript module.
@name: "" #Document the name of an object.
@namespace: "" #Document a namespace object.
@override: "" #Indicate that a symbol overrides its parent.
@package: "חבילה" # This symbol is meant to be package-private.
  # ✅ @Adarwall
@param: "" #(synonyms: @arg, @argument)Document the parameter to a function.
@private: "פרטי" #This symbol is meant to be private.
  # ✅ @Adarwall
@property: "" #(synonyms: @prop) Document a property of an object.
@protected: "" #This symbol is meant to be protected.
@public: "ציבורי" #This symbol is meant to be public.
  # ✅ @Adarwall
@readonly: "" #This symbol is meant to be read-only.
@requires: "" #This file requires a JavaScript module.
@returns: "" #(synonyms: @return)Document the return value of a function.
@see: "" #Refer to some other documentation for more information.
@since: "" #When was this feature added?
@static: "" #Document a static member.
@summary: "" #A shorter version of the full description.
@this: "זה" #What does the 'this' keyword refer to here?
  # ✅ @Adarwall
@throws: "" #(synonyms: @exception) Describe what errors could be thrown.
@todo: "" #Document tasks to be completed.
@tutorial: "" #Insert a link to an included tutorial file.
@type: "" #Document the type of an object.
@typedef: "" # Document a custom type.
@variation: "" # Distinguish different objects with the same name.
@version: "" # Documents the version number of an item.
@yields: "" #(synonyms: @yield) Document the value yielded by a generator function.
{@link}: "" # (synonyms: {@linkcode}, {@linkplain}) Link to another item in the documentation.
{@tutorial}: "" # Link to a tutorial.

# << Error Messages >>

# ----------------------
# |   LANGUAGE: JSON   |
# ----------------------
# << Keywords >>
# Not really sure how to do this for JSON
$schema: ""
$ref: ""
$id: ""
$comment: ""
# << Error Messages >>

# ----------------------
# |   LANGUAGE: NODE   |
# ----------------------
# << Keywords >>
__dirname: ""
__filename: ""
exports: ""
module: ""
require: "" #require()

# << Error Messages >>

# ----------------------
# |   LANGUAGE: OCAML  |
# ----------------------
# << Keywords >>
and: "" #
as: "" #
assert: "" #
asr: "" #
begin: "" #
class: "מחלקה" #
  # ✅ @Adarwall
constraint: "" #
do: "" #
done: "" #
downto: "" #
else: "אחרת" #
  # ✅ @Adarwall
end: "" #
exception: "" #
external: "" #
false: "שקר" #
  # ✅ @Adarwall
for: "לכל" #
  # ✅ @Adarwall
fun: "" #
function: "" #
functor: "" #
if: "אם" #
  # ✅ @Adarwall
in: "" #
include: "" #
inherit: "" #
initializer: "" #
land: "" #
lazy: "" #
let: "" #
lor: "" #
lsl: "" #
lsr: "" #
lxor: "" #
match: "" #
method: "" #
mod: "" #
module: "" #
mutable: "" #
new: "חדש" #
  # ✅ @Adarwall
nonrec: "" #
object: "" #
of: "" #
open: "" #
or: "" #
private: "פרטי" #
  # ✅ @Adarwall
rec: "" #
sig: "" #
struct: "" #
then: "" #
to: "" #
true: "אמת" #
  # ✅ @Adarwall
try: "" #
type: "" #
val: "" #
virtual: "" #
when: "" #
while: "כל_עוד" #
  # ✅ @Adarwall
with: "" #

# << Error Messages >>

# ----------------------
# |   LANGUAGE: PHP    |
# ----------------------
# << Keywords >>
__halt_compiler: ""
abstract: ""
and: ""
array: "מערך"
  # ✅ @Adarwall
as: ""
break: ""
callable: ""
case: ""
catch: ""
class: "מחלקה"
  # ✅ @Adarwall
clone: ""
const: ""
continue: ""
declare: ""
default: ""
die: ""
do: ""
echo: ""
else: "אחרת"
  # ✅ @Adarwall
elseif: ""
empty: ""
enddeclare: ""
endfor: ""
endforeach: ""
endif: ""
endswitch: ""
endwhile: "כל_עוד"
  # ✅ @Adarwall
eval: ""
exit: ""
extends: ""
final: ""
for: "לכל"
  # ✅ @Adarwall
foreach: ""
function: ""
global: ""
goto: ""
if: "אם"
  # ✅ @Adarwall
implements: ""
include: ""
include_once: ""
instanceof: ""
insteadof: ""
interface: ""
isset: ""
list: ""
namespace: ""
new: "חדש"
  # ✅ @Adarwall
or: ""
print: ""
private: "פרטי"
  # ✅ @Adarwall
protected: ""
public: "ציבורי"
  # ✅ @Adarwall
require: ""
require_once: ""
return: "החזר"
  # ✅ @Adarwall
static: ""
switch: ""
throw: ""
trait: ""
try: ""
unset: ""
use: ""
var: ""
while: "כל_עוד"
  # ✅ @Adarwall
xor: ""
__CLASS__: ""
__DIR__: ""
__FILE__: ""
__FUNCTION__: ""
__LINE__: ""
__METHOD__: ""
__NAMESPACE__: ""
__TRAIT__: ""

# << Error Messages >>

# ----------------------
# |  LANGUAGE: PYTHON  |
# ----------------------
# << Keywords >>
  False: "שקר"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  None: "כלום"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor "ריק" Python's "None" is equivalent to other language's null
    # ❓ @tomerpacific None is not equivalent to null of other languages. I think the current translation is fitting.
  True: "אמת"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  and: "ו"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor Although 100% correct. I'm hesistant to use a single character
    # ❓ @tomerpacific Maybe should be renamed to "וגם"
  as: "כ"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor Although 100% correct. I'm hesistant to use a single character
    # ✅ @tomerpacific
  assert: "הנח"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor In Python, I could aruge I can replace "assert" with "insist" I suggest "לדרוש  or להתעקש"
    # ❓ @tomerpacific When assert is used, it is to evaluate a certain condition. Therefore, I believe a better translation would be "בחן".
  async: "בסנכרון"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor 'אסינכרוני' The opposite of Sync
    # ❓ @tomerpacific Should be renamed to "אסינכרוני"
  await: "המתן"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  break: "לשבור"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ❓ @tomerpacific Should be "שבור"
  class: "מחלקה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor I agree. However, thoughts on "אובייקט" (I understand they are not the same)?
    # ✅ @tomerpacific
  continue: "המשך"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  def: "פעולה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ❓ @tomerpacific This keyword means definition so the translation should be "הגדר"
  del: "מחק"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  elif: "אחרת_אז"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  else: "אחרת"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  except: "בשגיאה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ❓ @tomerpacific This marks and exception, so it should be "חריגה"
  finally: "לבסוף"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  for: "לכל"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  from: "מ"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor Although 100% correct. I'm hesistant to use a single character
    #    @tomerpacific
  global: "גלובלי"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  if: "אם"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  import: "ייבא"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  in: "ב"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor although 100% correct. I'm hesistant to use a single character. how about "בתוך"
    # ❓ @tomerpacific I support "בתוך"
  is: "הוא"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  lambda: "פעולונת"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor Clever!
    # ✅ @tomerpacific
  nonlocal: "לא_מקומי"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  not: "לא"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  or: "או"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  pass: "קוד_עתידי"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor Since "pass" is a null statement, how about "הצהרת_בטל"
    # ✅ @tomerpacific
  raise: "העלה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  return: "החזר"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  try: "נסה"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  while: "כל_עוד"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  with: "עם"
    # ✅ @Adarwall
    # ✅ @Gal-Gilor
    # ✅ @tomerpacific
  yield: "הוצא"
    # ✅ @Adarwall
    # ❓ @Gal-Gilor How about "חולל איטרטור"
    # ❓ @tomerpacific How about "חולל גנרטור"

# << Built-In Functions >>

  abs: "ערך_מוחלט"
    # ✅ @tomerpacific
  all: "הכל"
    # ✅ @Adarwall
  any: "כל_ערך"
    # ✅ @tomerpacific
  ascii: "אסקי"
    # ✅ @tomerpacific
  bin: "בינארי"
    # ✅ @Adarwall
  bool: "בוליאני"
    # ✅ @Adarwall
  breakpoint: "נקודת_שבירה"
    # ✅ @Adarwall
  bytearray: "מערך_בייטים"
    # ✅ @tomerpacific
  bytes: "בייטים"
    # ✅ @tomerpacific
  callable: "ניתן_לקריאה"
    # ✅ @tomerpacific
  chr: "תו"
    # ✅ @Adarwall
  classmethod: "מתודת_מחלקה"
    # ✅ @tomerpacific
  compile: "עבד"
    # ✅ @tomerpacific
  complex: "מורכב"
    # ✅ @tomerpacific
  delattr: "מחק_תכונה"
    # ✅ @tomerpacific
  dict: "מילון"
    # ✅ @tomerpacific
  dir: "תיקיה"
    # ✅ @tomerpacific
  divmod: "חלוקה"
    # ✅ @tomerpacific
  enumerate: "למנות"
    # ✅ @tomerpacific
  eval: "לשערך"
    # ✅ @tomerpacific
  exec: "לבצע"
    # ✅ @tomerpacific
  filter: "סנן"
    # ✅ @Adarwall
  float: "ממשי"
    # ✅ @Adarwall
  format: "ערוך_לתבנית"
    # ✅ @tomerpacific
  frozenset: "מערכת_בלתי_ניתנת_לשינוי"
    # ✅ @tomerpacific
  getattr: "השג_ערך"
    # ✅ @tomerpacific
  globals: "גלובאלים"
    # ✅ @tomerpacific
  hasattr: "בעל_תכונה"
    # ✅ @tomerpacific
  hash: "בליל"
    # ✅ @tomerpacific
  help: "עזרה"
    # ✅ @Adarwall
  hex: "הקסדצימלי"
    # ✅ @tomerpacific
  id: "מזהה"
    # ✅ @Adarwall
  input: "קלט"
    # ✅ @tomerpacific
  int: "שלם"
    # ✅ @Adarwall
  isinstance: "האם_סוג_של"
    # ✅ @tomerpacific
  issubclass: "מחלקה"
    # ✅ @Adarwall
  iter: "איטרטור"
    # ✅ @tomerpacific
  len: "אורך"
    # ✅ @Adarwall
  list: "רשימה"
    # ✅ @Adarwall
  locals: "טבלת_ערכים_מקומיים"
    # ✅ @tomerpacific
  map: "למפות"
    # ✅ @Adarwall
  max: "מקסימום"
    # ✅ @Adarwall
  memoryview: "אובייקט_תצוגת_זיכרון"
    # ✅ @tomerpacific
  min: "מינימום"
    # ✅ @Adarwall
  next: "הבא"
    # ✅ @Adarwall
  object: "אובייקט"
    # ✅ @Adarwall
  oct: "אוקטלי"
    # ✅ @tomerpacific
  open: "פתח"
    # ✅ @Adarwall
  ord: "ערך_תו_יוניקוד"
    # ✅ @tomerpacific
  pow: "חזקה"
    # ✅ @Adarwall
  print: "הדפס"
    # ✅ @Adarwall
  property: "תכונה"
    # ✅ @tomerpacific
  range: "טווח"
    # ✅ @Adarwall
  repr: "ייצוג_להדפסה"
    # ✅ @tomerpacific
  reversed: "מהופך"
    # ✅ @Adarwall
  round: "עיגול"
    # ✅ @Adarwall
  set: "הגדר"
    # ✅ @Adarwall
  setattr: "ערוך_תכונה"
    # ✅ @tomerpacific
  slice: "חתוך"
    # ✅ @tomerpacific
  sorted: "ממויין"
    # ✅ @Adarwall
  staticmethod: "מתודה_סטטית"
    # ✅ @tomerpacific
  str: "מחרוזת"
    # ✅ @Adarwall
  sum: "סכום"
    # ✅ @Adarwall
  super: "מחלקת אם"
    # ✅ @tomerpacific
  tuple: "צמד"
    # ✅ @tomerpacific
  type: "סוג"
    # ✅ @tomerpacific
  vars: "תכונת_מילון"
    # ✅ @tomerpacific
  zip: "לקבץ"
    # ✅ @tomerpacific
  __import__: "__ייבוא__"
    # ✅ @Adarwall

# << Error Messages >>

# ----------------------
# |   LANGUAGE: RAZOR   |
# ----------------------
# << Keywords >>
page: "" # (Requires ASP.NET Core 2.0 and later)
namespace: "" #
functions: "" #
inherits: "" #
model: "" #
section: "" #
helper: "" # (Not currently supported by ASP.NET Core)
@case: "" #
@do: "" #
@default: "" #
@for: "לכל"
  # ✅ @Adarwall
@foreach: "" #
@if: "אם" #
@else: "אחרת" #
@lock: "" #
@switch: "" #
@try: "" #
@catch: "" #
@finally: "" #
@using: "" #
@while: "כל_עוד"
  # ✅ @Adarwall
# << Error Messages >>

# ----------------------
# |   LANGUAGE: REGEX  |
# ----------------------
# << Keywords >>
# Not sure how to template that out // taking all ideas
# << Error Messages >>

# ----------------------
# |   LANGUAGE: RUBY   |
# ----------------------
# << Keywords >>
alias: ""
and: ""
begin: ""
break: ""
case: ""
class: "מחלקה"
  # ✅ @Adarwall
def: ""
defined?: ""
do: ""
else: "אחרת"
  # ✅ @Adarwall
elsif: ""
end: ""
ensure: ""
false: "שקר"
  # ✅ @Adarwall
for: "לכל"
  # ✅ @Adarwall
if: "אם"
  # ✅ @Adarwall
in: ""
module: ""
next: ""
nil: ""
not: ""
or: ""
redo: ""
rescue: ""
retry: ""
return: "החזר"
  # ✅ @Adarwall
self: ""
super: ""
then: ""
true: "אמת"
  # ✅ @Adarwall
undef: ""
unless: ""
until: ""
when: ""
while: "כל_עוד"
  # ✅ @Adarwall
yield: ""

# << Error Messages >>

# ----------------------
# |   LANGUAGE:  RUST  |
# ----------------------
# << Keywords >>

_: ""
abstract: ""
alignof: ""
as: ""
become: ""
box: ""
break: ""
const: ""
continue: ""
crate: ""
do: ""
else: "אחרת"
  # ✅ @Adarwall
enum: ""
extern: ""
false: "שקר"
  # ✅ @Adarwall
final: ""
fn: ""
for: "לכל"
  # ✅ @Adarwall
if: "אם"
  # ✅ @Adarwall
impl: ""
in: ""
let: ""
loop: ""
macro: ""
match: ""
mod: ""
move: ""
mut: ""
offsetof: ""
override: ""
priv: ""
proc: ""
pub: ""
pure: ""
ref: ""
return: "החזר"
  # ✅ @Adarwall
Self: ""
self: ""
sizeof: ""
static: ""
struct: ""
super: ""
trait: ""
true: "אמת"
type: ""
typeof: ""
unsafe: ""
unsized: ""
use: ""
virtual: ""
where: ""
while: "כל_עוד"
  # ✅ @Adarwall
yield: ""

# << Error Messages >>

# ----------------------
# |   LANGUAGE: SCALA  |
# ----------------------
# << Keywords >>
abstract: ""
case: ""
catch: ""
class: "מחלקה"
  # ✅ @Adarwall
def: ""
do: ""
else: "אחרת"
  # ✅ @Adarwall
extends: ""
false: "שקר"
  # ✅ @Adarwall
final: ""
finally: ""
for: "לכל"
  # ✅ @Adarwall
forSome: ""
if: "אם"
  # ✅ @Adarwall
implicit: ""
import: "ייבא"
  # ✅ @Adarwall
lazy: ""
macro: ""
match: ""
new: "חדש"
  # ✅ @Adarwall
null: "כלום"
  # ✅ @Adarwall
object: ""
override: ""
package: "חבילה"
  # ✅ @Adarwall
private: "פרטי"
  # ✅ @Adarwall
protected: ""
return: "החזר"
  # ✅ @Adarwall
sealed: ""
super: ""
this: "זה"
  # ✅ @Adarwall
throw: ""
trait: ""
try: ""
true: "אמת"
  # ✅ @Adarwall
type: ""
val: ""
var: ""
while: "כל_עוד"
  # ✅ @Adarwall
with: ""
yield: ""
# << Error Messages >>

# ----------------------
# |   LANGUAGE: SWIFT   |
# ----------------------
# << Keywords >>
associatedtype: ""
class: "מחלקה"
  # ✅ @Adarwall
deinit: ""
enum: ""
extension: ""
func: "פעולה"
  # ✅ @Adarwall
import: "ייבא"
  # ✅ @Adarwall
init: ""
inout: ""
internal: ""
let: ""
operator: ""
private: "פרטי"
  # ✅ @Adarwall
protocol: ""
public: "ציבורי"
  # ✅ @Adarwall
static: ""
struct: ""
subscript: ""
typealias: ""
var: ""
break: ""
case: ""
continue: ""
default: ""
defer: ""
do: ""
else: "אחרת"
  # ✅ @Adarwall
fallthrough: ""
for: "לכל"
  # ✅ @Adarwall
guard: ""
if: "אם"
  # ✅ @Adarwall
in: ""
repeat: ""
return: "החזר"
  # ✅ @Adarwall
switch: ""
where: ""
while: "כל_עוד"
  # ✅ @Adarwall
as: ""
catch: ""
dynamicType: ""
false: "שקר"
  # ✅ @Adarwall
is: ""
nil: ""
rethrows: ""
super: ""
self: ""
Self: ""
throw: ""
throws: ""
true: "אמת"
  # ✅ @Adarwall
try: ""
#column: ""
#file: ""
#function: ""
#line: ""
#available: ""
#column: ""
#else: "אחרת"
  # ✅ @Adarwall
#elseif: ""
#endif: ""
#file: ""
#function: ""
#if: "אם"
  # ✅ @Adarwall
#line: ""
#selector: ""
associativity: ""
convenience: ""
dynamic: ""
didSet: ""
final: ""
get: ""
infix: ""
indirect: ""
lazy: ""
left: ""
mutating: ""
none: ""
nonmutating: ""
optional: ""
override: ""
postfix: ""
precedence: ""
prefix: ""
Protocol: ""
required: ""
right: ""
set: ""
Type: ""
unowned: ""
weak: ""
willSet: ""

# << Error Messages >>

# ---------------------------
# |   LANGUAGE: TYPESCRIPT  |
# ---------------------------
# << Keywords >>
break: ""
case: ""
catch: ""
class: "מחלקה"
  # ✅ @Adarwall
const: ""
continue: ""
debugger: ""
default: ""
delete: ""
do: ""
else: "אחרת"
  # ✅ @Adarwall
enum: ""
export: ""
extends: ""
false: "שקר"
  # ✅ @Adarwall
finally: ""
for: "לכל"
  # ✅ @Adarwall
function: ""
if: "אם"
  # ✅ @Adarwall
import: "ייבא"
  # ✅ @Adarwall
in: ""
instanceof: ""
new: "חדש"
  # ✅ @Adarwall
null: "כלום"
  # ✅ @Adarwall
return: "החזר"
  # ✅ @Adarwall
super: ""
switch: ""
this: "זה"
  # ✅ @Adarwall
throw: ""
true: "אמת"
  # ✅ @Adarwall
try: ""
typeof: "מסוג"
  # ✅ @Adarwall
var: ""
void: ""
while: "כל_עוד"
  # ✅ @Adarwall
with: ""
as: ""
implements: ""
interface: ""
let: ""
package: "חבילה"
  # ✅ @Adarwall
private: "פרטי"
  # ✅ @Adarwall
protected: ""
public: "ציבורי"
  # ✅ @Adarwall
static: ""
yield: ""
any: ""
boolean: ""
constructor: ""
declare: ""
get: ""
module: ""
require: ""
number: ""
set: ""
string: ""
symbol: ""
type: ""
from: ""
of: ""

# << Error Messages >>

# ------------------------
# |   LANGUAGE: VERILOG  |
# ------------------------
# << Keywords >>

always: ""
and: ""
assign: ""
begin: ""
buf: ""
bufif0: ""
bufif1: ""
case: ""
casex: ""
casez: ""
cmos: ""
deassign: ""
default: ""
defparam: ""
disable: ""
edge: ""
else: "אחרת"
  # ✅ @Adarwall
end: ""
endcase: ""
endfunction: ""
endmodule: ""
endprimitive: ""
endspecify: ""
endtable: ""
endtask: ""
event: ""
for: "לכל"
  # ✅ @Adarwall
force: ""
forever: ""
fork: ""
function: ""
highz0: ""
highz1: ""
if: "אם"
  # ✅ @Adarwall
initial: ""
inout: ""
input: ""
integer: ""
join: ""
large: ""
macromodule: ""
medium: ""
module: ""
nand: ""
negedge: ""
nmos: ""
nor: ""
not: ""
notif0: ""
notif1: ""
or: ""
output: ""
pmos: ""
posedge: ""
primitive: ""
pull0: ""
pull1: ""
pulldown: ""
pullup: ""
rcmos: ""
reg: ""
release: ""
repeat: ""
rnmos: ""
rpmos: ""
rtran: ""
rtranif0: ""
rtranif1: ""
scalared: ""
small: ""
specify: ""
specparam: ""
strong0: ""
strong1: ""
supply0: ""
supply1: ""
table: ""
task: ""
time: ""
tran: ""
tranif0: ""
tranif1: ""
tri: ""
tri0: ""
tri1: ""
triand: ""
trior: ""
vectored: ""
wait: ""
wand: ""
weak0: ""
weak1: ""
while: "כל_עוד"
  # ✅ @Adarwall
wire: ""
wor: ""
xnor: ""
xor: ""

# << Error Messages >>
