programming_languages:
  afl:
    keywords:
      AND:
      break:
      case:
      continue:
      default:
      do:
      else:
      for:
      function:
      global:
      if:
      local:
      NOT:
      Null:
      OR:
      procedure:
      return:
      static:
      switch:
      typeof:
      while:
  agda:
    keywords:
      abstract:
      codata:
      coinductive:
      constructor:
      data:
      do:
      eta-equality:
      field:
      forall:
      hiding:
      import:
      in:
      inductive:
      infix:
      infixl:
      infixr:
      instance:
      let:
      macro:
      module:
      mutual:
      no-eta-equality:
      open:
      overlap:
      pattern:
      postulate:
      primitive:
      private:
      public:
      quote:
      quoteContext:
      quoteGoal:
      quoteTerm:
      record:
      renaming:
      rewrite:
      Set:
      syntax:
      tactic:
      unquote:
      unquoteDecl:
      unquoteDef:
      using:
      where:
      with:
  bash:
    keywords:
      case:
      coproc:
      do:
      done:
      elif:
      else:
      esac:
      fi:
      for:
      function:
      if:
      in:
      select:
      then:
      time:
      until:
      while:
  c:
    keywords:
      auto:
      break:
      case:
      char:
      const:
      continue:
      default:
      do:
      double:
      else:
      enum:
      extern:
      float:
      for:
      goto:
      if:
      int:
      long:
      register:
      return:
      short:
      signed:
      sizeof:
      static:
      struct:
      switch:
      typedef:
      union:
      unsigned:
      void:
      volatile:
      while:
  c#:
    keywords:
      abstract:
      add:
      alias:
      as:
      ascending:
      async:
      await:
      base:
      bool:
      break:
      byte:
      case:
      catch:
      char:
      checked:
      class:
      const:
      continue:
      decimal:
      default:
      delegate:
      descending:
      do:
      double:
      dynamic:
      else:
      enum:
      event:
      explicit:
      extern:
      false:
      finally:
      fixed:
      float:
      for:
      foreach:
      from:
      get:
      global:
      goto:
      group:
      if:
      implicit:
      in:
      int:
      interface:
      internal:
      into:
      is:
      join:
      let:
      lock:
      long:
      namespace:
      new:
      null:
      object:
      operator:
      orderby:
      out:
      override:
      params:
      partial:
      private:
      protected:
      public:
      readonly:
      ref:
      remove:
      return:
      sbyte:
      sealed:
      select:
      set:
      short:
      sizeof:
      stackalloc:
      static:
      string:
      struct:
      switch:
      this:
      throw:
      true:
      try:
      typeof:
      uint:
      ulong:
      unchecked:
      unsafe:
      ushort:
      using:
      value:
      var:
      virtual:
      void:
      volatile:
      where:
      while:
      yield:
  c++:
    keywords:
      "#define":
      "#defined":
      "#elif":
      "#else":
      "#endif":
      "#error":
      "#if":
      "#ifdef":
      "#ifndef":
      "#include":
      "#line":
      "#pragma":
      "#undef":
      alignas:
      alignof:
      and:
      and_eq:
      asm:
      atomic_cancel:
      atomic_commit:
      atomic_noexcept:
      auto:
      bitand:
      bitor:
      bool:
      break:
      case:
      catch:
      char:
      char16_t:
      char32_t:
      class:
      compl:
      concept:
      const:
      const_cast:
      constexpr:
      continue:
      decltype:
      default:
      delete:
      do:
      double:
      dynamic_cast:
      else:
      enum:
      explicit:
      export:
      extern:
      false:
      final:
      float:
      for:
      friend:
      goto:
      if:
      import:
      inline:
      int:
      long:
      module:
      mutable:
      namespace:
      new:
      noexcept:
      not:
      not_eq:
      nullptr:
      operator:
      or:
      or_eq:
      override:
      private:
      protected:
      public:
      register:
      reinterpret_cast:
      requires:
      return:
      short:
      signed:
      sizeof:
      static:
      static_assert:
      static_cast:
      struct:
      switch:
      synchronized:
      template:
      this:
      thread_local:
      throw:
      transaction_safe:
      transaction_safe_dynamic:
      true:
      try:
      typedef:
      typeid:
      typename:
      union:
      unsigned:
      using:
      virtual:
      void:
      volatile:
      wchar_t:
      while:
      xor:
      xor_eq:
  css:
    keywords:
      "@charset":
      "@font-face":
      "@font-values":
      "@import":
      "@keyframes":
      "@media":
      align-content:
      align-items:
      align-self:
      all:
      animation:
      animation-count:
      animation-delay:
      animation-direction:
      animation-duration:
      animation-function:
      animation-mode:
      animation-name:
      animation-state:
      backface-visibility:
      background:
      background-attachment:
      background-clip:
      background-color:
      background-image:
      background-mode:
      background-origin:
      background-position:
      background-repeat:
      background-size:
      border:
      border-bottom:
      border-collapse:
      border-color:
      border-image:
      border-left:
      border-outset:
      border-radius:
      border-repeat:
      border-right:
      border-slice:
      border-source:
      border-spacing:
      border-style:
      border-top:
      border-width:
      bottom:
      box-break:
      box-shadow:
      box-sizing:
      break-after:
      break-before:
      break-inside:
      caption-side:
      caret-color:
      clear:
      clip:
      color:
      column-color:
      column-count:
      column-fill:
      column-gap:
      column-rule:
      column-span:
      column-style:
      column-width:
      columns:
      content:
      counter-increment:
      counter-reset:
      cursor:
      direction:
      display:
      empty-cells:
      filter:
      flex:
      flex-basis:
      flex-direction:
      flex-flow:
      flex-grow:
      flex-shrink:
      flex-wrap:
      float:
      font:
      font-adjust:
      font-alternates:
      font-asian:
      font-caps:
      font-family:
      font-kerning:
      font-ligatures:
      font-numeric:
      font-override:
      font-position:
      font-settings:
      font-size:
      font-stretch:
      font-style:
      font-synthesis:
      font-variant:
      font-weight:
      grid:
      grid-area:
      grid-areas:
      grid-column:
      grid-columns:
      grid-end:
      grid-flow:
      grid-gap:
      grid-row:
      grid-rows:
      grid-start:
      grid-template:
      hanging-punctuation:
      height:
      hyphens:
      image-rendering:
      isolation:
      justify-content:
      left:
      letter-spacing:
      line-break:
      line-height:
      list-image:
      list-position:
      list-style:
      list-type:
      margin:
      margin-bottom:
      margin-left:
      margin-right:
      margin-top:
      max-height:
      max-width:
      min-height:
      min-width:
      mix-mode:
      object-fit:
      object-position:
      opacity:
      order:
      orphans:
      outline:
      outline-color:
      outline-offset:
      outline-style:
      outline-width:
      overflow:
      overflow-wrap:
      overflow-x:
      overflow-y:
      padding:
      padding-bottom:
      padding-left:
      padding-right:
      padding-top:
      page-after:
      page-before:
      page-inside:
      perspective:
      perspective-origin:
      pointer-events:
      position:
      quotes:
      resize:
      right:
      scroll-behavior:
      Specifies:
      tab-size:
      table-layout:
      text-align:
      text-color:
      text-decoration:
      text-indent:
      text-justify:
      text-last:
      text-line:
      text-orientation:
      text-overflow:
      text-position:
      text-shadow:
      text-style:
      text-transform:
      text-upright:
      top:
      transform:
      transform-origin:
      transform-style:
      transition:
      transition-delay:
      transition-duration:
      transition-function:
      transition-property:
      unicode-bidi:
      user-select:
      vertical-align:
      visibility:
      white-space:
      widows:
      width:
      word-break:
      word-spacing:
      word-wrap:
      writing-mode:
      z-index:
  golang:
    keywords:
      break:
      case:
      chan:
      const:
      continue:
      default:
      defer:
      else:
      fallthrough:
      for:
      func:
      go:
      goto:
      if:
      import:
      interface:
      map:
      package:
      range:
      return:
      select:
      struct:
      switch:
      type:
      var:
  haskell:
    keywords:
      as:
      case:
      class:
      data:
      data family:
      data instance:
      default:
      deriving:
      deriving instance:
      do:
      else:
      forall:
      foreign:
      hiding:
      if:
      import:
      in:
      infix:
      infixl:
      infixr:
      instance:
      let:
      mdo:
      module:
      newtype:
      of:
      proc:
      qualified:
      rec:
      then:
      type:
      type family:
      type instance:
      where:
  html:
    keywords:
      "!DOCTYPE":
      a:
      abbr:
      acronym:
      address:
      applet:
      area:
      article:
      aside:
      audio:
      b:
      base:
      basefont:
      bdi:
      bdo:
      big:
      blockquote:
      body:
      br:
      button:
      canvas:
      caption:
      center:
      cite:
      code:
      col:
      colgroup:
      data:
      datalist:
      dd:
      del:
      details:
      dfn:
      dialog:
      dir:
      div:
      dl:
      dt:
      em:
      embed:
      fieldset:
      figcaption:
      figure:
      font:
      footer:
      form:
      frame:
      frameset:
      h1:
      head:
      header:
      hr:
      html:
      i:
      iframe:
      img:
      input:
      ins:
      kbd:
      label:
      legend:
      li:
      link:
      main:
      map:
      mark:
      meta:
      meter:
      nav:
      noframes:
      noscript:
      object:
      ol:
      optgroup:
      option:
      output:
      p:
      param:
      picture:
      pre:
      progress:
      q:
      rp:
      rt:
      ruby:
      s:
      samp:
      script:
      section:
      select:
      small:
      source:
      span:
      strike:
      strong:
      style:
      sub:
      summary:
      sup:
      svg:
      table:
      tbody:
      td:
      template:
      textarea:
      tfoot:
      th:
      thead:
      time:
      title:
      tr:
      track:
      tt:
      u:
      ul:
      var:
      video:
      wbr:
  java:
    keywords:
      _:
      abstract:
      assert:
      boolean:
      break:
      byte:
      case:
      catch:
      char:
      class:
      const:
      continue:
      default:
      do:
      double:
      else:
      enum:
      extends:
      final:
      finally:
      float:
      for:
      goto:
      if:
      implements:
      import:
      instanceof:
      int:
      interface:
      long:
      native:
      new:
      package:
      private:
      protected:
      public:
      return:
      short:
      static:
      strictfp:
      super:
      switch:
      synchronized:
      this:
      throw:
      throws:
      transient:
      try:
      void:
      volatile:
      while:
  javascript:
    keywords:
      arguments:
      await:
      break:
      case:
      catch:
      class:
      const:
      continue:
      debugger:
      default:
      delete:
      do:
      else:
      enum:
      eval:
      export:
      extends:
      false:
      finally:
      for:
      from:
      function:
      if:
      implements:
      import:
      in:
      instanceof:
      interface:
      let:
      new:
      null:
      package:
      private:
      protected:
      public:
      return:
      static:
      super:
      switch:
      this:
      throw:
      true:
      try:
      typeof:
      var:
      void:
      while:
      with:
      yield:
  jsdoc:
    keywords:
      "@abstract":
      "@access":
      "@alias":
      "@async":
      "@augments":
      "@author":
      "@borrows":
      "@callback":
      "@class":
      "@classdesc":
      "@constant":
      "@constructs":
      "@copyright":
      "@default":
      "@deprecated":
      "@description":
      "@enum":
      "@event":
      "@example":
      "@exports":
      "@external":
      "@file":
      "@fires":
      "@function":
      "@generator":
      "@global":
      "@hideconstructor":
      "@ignore":
      "@implements":
      "@inheritdoc":
      "@inner":
      "@instance":
      "@interface":
      "@kind":
      "@lends":
      "@license":
      "@listens":
      "@member":
      "@memberof":
      "@mixes":
      "@mixin":
      "@module":
      "@name":
      "@namespace":
      "@override":
      "@package":
      "@param":
      "@private":
      "@property":
      "@protected":
      "@public":
      "@readonly":
      "@requires":
      "@returns":
      "@see":
      "@since":
      "@static":
      "@summary":
      "@this":
      "@throws":
      "@todo":
      "@tutorial":
      "@type":
      "@typedef":
      "@variation":
      "@version":
      "@yields":
      "{@link}":
      "{@tutorial}":
  json:
    keywords:
      $comment:
      $id:
      $ref:
      $schema:
  julia:
    keywords:
      abstract:
      baremodule:
      begin:
      bitstype:
      break:
      catch:
      const:
      continue:
      do:
      else:
      end:
      export:
      false:
      finally:
      for:
      function:
      global:
      if:
      immutable:
      import:
      importall:
      let:
      local:
      macro:
      module:
      quote:
      return:
      struct:
      true:
      try:
      type:
      typealias:
      using:
      while:
  node:
    keywords:
      __dirname:
      __filename:
      exports:
      module:
      require:
  ocaml:
    keywords:
      and:
      as:
      asr:
      assert:
      begin:
      class:
      constraint:
      do:
      done:
      downto:
      else:
      end:
      exception:
      external:
      false:
      for:
      fun:
      function:
      functor:
      if:
      in:
      include:
      inherit:
      initializer:
      land:
      lazy:
      let:
      lor:
      lsl:
      lsr:
      lxor:
      match:
      method:
      mod:
      module:
      mutable:
      new:
      nonrec:
      object:
      of:
      open:
      or:
      private:
      rec:
      sig:
      struct:
      then:
      to:
      true:
      try:
      type:
      val:
      virtual:
      when:
      while:
      with:
  php:
    keywords:
      __CLASS__:
      __DIR__:
      __FILE__:
      __FUNCTION__:
      __halt_compiler:
      __LINE__:
      __METHOD__:
      __NAMESPACE__:
      __TRAIT__:
      abstract:
      and:
      array:
      as:
      break:
      callable:
      case:
      catch:
      class:
      clone:
      const:
      continue:
      declare:
      default:
      die:
      do:
      echo:
      else:
      elseif:
      empty:
      enddeclare:
      endfor:
      endforeach:
      endif:
      endswitch:
      endwhile:
      eval:
      exit:
      extends:
      final:
      for:
      foreach:
      function:
      global:
      goto:
      if:
      implements:
      include:
      include_once:
      instanceof:
      insteadof:
      interface:
      isset:
      list:
      namespace:
      new:
      or:
      print:
      private:
      protected:
      public:
      require:
      require_once:
      return:
      static:
      switch:
      throw:
      trait:
      try:
      unset:
      use:
      var:
      while:
      xor:
  python:
    builtin_functions:
      __import__:
      abs:
      all:
      any:
      ascii:
      bin:
      bool:
      breakpoint:
      bytearray:
      bytes:
      callable:
      chr:
      classmethod:
      compile:
      complex:
      delattr:
      dict:
      dir:
      divmod:
      enumerate:
      eval:
      exec:
      filter:
      float:
      format:
      frozenset:
      getattr:
      globals:
      hasattr:
      hash:
      help:
      hex:
      id:
      input:
      int:
      isinstance:
      issubclass:
      iter:
      len:
      list:
      locals:
      map:
      max:
      memoryview:
      min:
      next:
      object:
      oct:
      open:
      ord:
      pow:
      print:
      property:
      range:
      repr:
      reversed:
      round:
      set:
      setattr:
      slice:
      sorted:
      staticmethod:
      str:
      sum:
      super:
      tuple:
      type:
      vars:
      zip:
    keywords:
      and:
      as:
      assert:
      async:
      await:
      break:
      class:
      continue:
      def:
      del:
      elif:
      else:
      except:
      False:
      finally:
      for:
      from:
      global:
      if:
      import:
      in:
      is:
      lambda:
      None:
      nonlocal:
      not:
      or:
      pass:
      raise:
      return:
      True:
      try:
      while:
      with:
      yield:
  razor:
    keywords:
      "@case":
      "@catch":
      "@default":
      "@do":
      "@else":
      "@finally":
      "@for":
      "@foreach":
      "@if":
      "@lock":
      "@switch":
      "@try":
      "@using":
      "@while":
      functions:
      helper:
      inherits:
      model:
      namespace:
      page:
      section:
  regex:
    keywords:
  ruby:
    keywords:
      alias:
      and:
      begin:
      break:
      case:
      class:
      def:
      defined?:
      do:
      else:
      elsif:
      end:
      ensure:
      false:
      for:
      if:
      in:
      module:
      next:
      nil:
      not:
      or:
      redo:
      rescue:
      retry:
      return:
      self:
      super:
      then:
      true:
      undef:
      unless:
      until:
      when:
      while:
      yield:
  rust:
    keywords:
      _:
      abstract:
      alignof:
      as:
      become:
      box:
      break:
      const:
      continue:
      crate:
      do:
      else:
      enum:
      extern:
      false:
      final:
      fn:
      for:
      if:
      impl:
      in:
      let:
      loop:
      macro:
      match:
      mod:
      move:
      mut:
      offsetof:
      override:
      priv:
      proc:
      pub:
      pure:
      ref:
      return:
      self:
      Self:
      sizeof:
      static:
      struct:
      super:
      trait:
      true:
      type:
      typeof:
      unsafe:
      unsized:
      use:
      virtual:
      where:
      while:
      yield:
  scala:
    keywords:
      abstract:
      case:
      catch:
      class:
      def:
      do:
      else:
      extends:
      false:
      final:
      finally:
      for:
      forSome:
      if:
      implicit:
      import:
      lazy:
      macro:
      match:
      new:
      null:
      object:
      override:
      package:
      private:
      protected:
      return:
      sealed:
      super:
      this:
      throw:
      trait:
      true:
      try:
      type:
      val:
      var:
      while:
      with:
      yield:
  swift:
    keywords:
      as:
      associatedtype:
      associativity:
      break:
      case:
      catch:
      class:
      continue:
      convenience:
      default:
      defer:
      deinit:
      didSet:
      do:
      dynamic:
      dynamicType:
      else:
      enum:
      extension:
      fallthrough:
      false:
      final:
      for:
      func:
      get:
      guard:
      if:
      import:
      in:
      indirect:
      infix:
      init:
      inout:
      internal:
      is:
      lazy:
      left:
      let:
      mutating:
      nil:
      none:
      nonmutating:
      operator:
      optional:
      override:
      postfix:
      precedence:
      prefix:
      private:
      protocol:
      Protocol:
      "#column":
      "#file":
      "#function":
      "#line":
      "#available":
      "#else":
      "#elseif":
      "#endif":
      "#if":
      "#selector":
      public:
      repeat:
      required:
      rethrows:
      return:
      right:
      self:
      Self:
      set:
      static:
      struct:
      subscript:
      super:
      switch:
      throw:
      throws:
      true:
      try:
      Type:
      typealias:
      unowned:
      var:
      weak:
      where:
      while:
      willSet:
  typescript:
    keywords:
      any:
      as:
      boolean:
      break:
      case:
      catch:
      class:
      const:
      constructor:
      continue:
      debugger:
      declare:
      default:
      delete:
      do:
      else:
      enum:
      export:
      extends:
      false:
      finally:
      for:
      from:
      function:
      get:
      if:
      implements:
      import:
      in:
      instanceof:
      interface:
      let:
      module:
      new:
      null:
      number:
      of:
      package:
      private:
      protected:
      public:
      require:
      return:
      set:
      static:
      string:
      super:
      switch:
      symbol:
      this:
      throw:
      true:
      try:
      type:
      typeof:
      var:
      void:
      while:
      with:
      yield:
  universal:
    keywords:
      BROKEN:
      BUG:
      CHGME:
      DEBUG:
      DEPRECATED:
      ERR:
      ERROR:
      HACK:
      IDEA:
      INFO:
      NOTE:
      NOTREACHED:
      OPTIMIZE:
      REFACTOR:
      REMOVE:
      REVIEW:
      TASK:
      TODO:
      UNDONE:
      WARN:
      WARNING:
  verilog:
    keywords:
      always:
      and:
      assign:
      begin:
      buf:
      bufif0:
      bufif1:
      case:
      casex:
      casez:
      cmos:
      deassign:
      default:
      defparam:
      disable:
      edge:
      else:
      end:
      endcase:
      endfunction:
      endmodule:
      endprimitive:
      endspecify:
      endtable:
      endtask:
      event:
      for:
      force:
      forever:
      fork:
      function:
      highz0:
      highz1:
      if:
      initial:
      inout:
      input:
      integer:
      join:
      large:
      macromodule:
      medium:
      module:
      nand:
      negedge:
      nmos:
      nor:
      not:
      notif0:
      notif1:
      or:
      output:
      pmos:
      posedge:
      primitive:
      pull0:
      pull1:
      pulldown:
      pullup:
      rcmos:
      reg:
      release:
      repeat:
      rnmos:
      rpmos:
      rtran:
      rtranif0:
      rtranif1:
      scalared:
      small:
      specify:
      specparam:
      strong0:
      strong1:
      supply0:
      supply1:
      table:
      task:
      time:
      tran:
      tranif0:
      tranif1:
      tri:
      tri0:
      tri1:
      triand:
      trior:
      vectored:
      wait:
      wand:
      weak0:
      weak1:
      while:
      wire:
      wor:
      xnor:
      xor:
